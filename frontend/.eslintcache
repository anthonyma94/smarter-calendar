[{"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\index.tsx":"1","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\App.tsx":"2","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\modules\\axios.ts":"3","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Calendar.tsx":"4","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\GoogleSignIn.tsx":"5","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\EventModal.tsx":"6","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\modules\\regex.ts":"7","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\EventModalIndividual.tsx":"8","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Navbar.tsx":"9","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Sidebar.tsx":"10"},{"size":203,"mtime":1608766364015,"results":"11","hashOfConfig":"12"},{"size":997,"mtime":1608767158999,"results":"13","hashOfConfig":"12"},{"size":198,"mtime":1608609147264,"results":"14","hashOfConfig":"12"},{"size":5215,"mtime":1608833750534,"results":"15","hashOfConfig":"12"},{"size":453,"mtime":1608610116852,"results":"16","hashOfConfig":"12"},{"size":5365,"mtime":1608765318383,"results":"17","hashOfConfig":"12"},{"size":6101,"mtime":1608760620395,"results":"18","hashOfConfig":"12"},{"size":1661,"mtime":1608760613428,"results":"19","hashOfConfig":"12"},{"size":2819,"mtime":1608773470673,"results":"20","hashOfConfig":"12"},{"size":2171,"mtime":1608833643354,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pqf78g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\index.tsx",[],["50","51"],"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\App.tsx",["52"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport http from \"./modules/axios\";\r\nimport GoogleSignIn from \"./components/GoogleSignIn\";\r\nimport Calendar from \"./components/Calendar\";\r\nimport { oauth2_v2 } from \"googleapis/build/src/apis/oauth2/index\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [user, setUser] = useState<oauth2_v2.Schema$Userinfo>({});\r\n\r\n  useEffect(() => {\r\n    http\r\n      .get(\"/\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setUser({});\r\n        setLoggedIn(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid={true} className=\"mt-3\">\r\n      {loggedIn ? (\r\n        <>\r\n          <Calendar user={user} />\r\n        </>\r\n      ) : (\r\n        <GoogleSignIn />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\modules\\axios.ts",[],"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Calendar.tsx",["53","54","55","56","57"],"import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport { Container, Row, Col, DropdownButton, Button } from \"react-bootstrap\";\r\nimport http from \"../modules/axios\";\r\nimport EventModal from \"./EventModal\";\r\nimport FullCalendar, { CalendarApi } from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\r\nimport { CalendarModel, CalendarEventModel } from \"models/out/main\";\r\nimport { oauth2_v2 } from \"googleapis/build/src/apis/oauth2\";\r\nimport Navbar from \"./Navbar\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nenum ActionType {\r\n  initial,\r\n  setAPI,\r\n  setCalByID,\r\n  setEvents,\r\n  addEvents,\r\n}\r\n\r\ninterface Action {\r\n  type: ActionType;\r\n  data?: any;\r\n}\r\n\r\ninterface State {\r\n  loading: boolean;\r\n  cal: CalendarModel | undefined;\r\n  cals: CalendarModel[] | undefined;\r\n  api: CalendarApi | undefined;\r\n  events: CalendarEventModel[];\r\n}\r\n\r\nconst Calendar = ({ user }: { user: oauth2_v2.Schema$Userinfo }) => {\r\n  const initialState: State = {\r\n    loading: true,\r\n    cal: undefined,\r\n    cals: undefined,\r\n    api: undefined,\r\n    events: [],\r\n  };\r\n\r\n  const calRef = useRef<FullCalendar>(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const calReducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n      case ActionType.initial: {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          cals: action.data.cals,\r\n          cal: action.data.cals[0],\r\n          events: action.data.events,\r\n        };\r\n      }\r\n      case ActionType.setAPI: {\r\n        return {\r\n          ...state,\r\n          api: calRef.current?.getApi(),\r\n        };\r\n      }\r\n      case ActionType.setCalByID: {\r\n        return {\r\n          ...state,\r\n          cal: state.cals!.find((item) => item.id === action.data),\r\n        };\r\n      }\r\n      case ActionType.setEvents: {\r\n        return {\r\n          ...state,\r\n          events: action.data,\r\n        };\r\n      }\r\n      case ActionType.addEvents: {\r\n        return {\r\n          ...state,\r\n          events: [\r\n            ...state.events,\r\n            ...(Array.isArray(action.data)\r\n              ? (action.data as CalendarEventModel[])\r\n              : [action.data as CalendarEventModel]), // Allows adding either a single object or an array of objects\r\n          ],\r\n        };\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(calReducer, initialState);\r\n  const { cal, cals, loading, api, events } = state;\r\n\r\n  const getCals = async () => {\r\n    try {\r\n      const res = await http.get(\"/calendar\");\r\n      return res.data as CalendarModel[];\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getEvents = async (id: string, params?: any) => {\r\n    try {\r\n      const res = await http.get(`/calendar/events/${id}`, { params });\r\n      return res.data as CalendarEventModel[];\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Loads initial props\r\n  useEffect(() => {\r\n    (async function () {\r\n      let cals = (await getCals())!.sort((a, b) =>\r\n        a.summary.localeCompare(b.summary)\r\n      );\r\n\r\n      // TODO: Type mapping for inner event\r\n      let events = await Promise.all(\r\n        cals.map(async (item) => {\r\n          let resp = await getEvents(item.id);\r\n          resp = resp!.map((inner) => {\r\n            inner.backgroundColor = item.color?.background as string;\r\n            inner.textColor = \"white\";\r\n            return inner;\r\n          });\r\n          return resp;\r\n        })\r\n      );\r\n\r\n      let flattenedEvents = events.flat(1);\r\n\r\n      dispatch({\r\n        type: ActionType.initial,\r\n        data: { cals, events: flattenedEvents },\r\n      });\r\n    })();\r\n    return;\r\n  }, []);\r\n\r\n  // Sets API for use\r\n  useEffect(() => {\r\n    if (!!calRef.current) {\r\n      dispatch({\r\n        type: ActionType.setAPI,\r\n      });\r\n    }\r\n    return;\r\n  }, [calRef]);\r\n\r\n  return (\r\n    <Container fluid={true} className=\"text-center\">\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <>\r\n          <EventModal\r\n            show={showModal}\r\n            handleClose={() => setShowModal(false)}\r\n            handleSubmit={(event) =>\r\n              dispatch({\r\n                type: ActionType.addEvents,\r\n                data: event,\r\n              })\r\n            }\r\n            cals={cals!}\r\n          />\r\n          <Navbar user={user} showModal={() => setShowModal(true)} />\r\n          <Row>\r\n            <Col className=\"d-none d-md-block\" md={3}>\r\n              <Sidebar\r\n                cals={cals as CalendarModel[]}\r\n                showModal={() => setShowModal(true)}\r\n              />\r\n            </Col>\r\n            <Col md={9}>\r\n              <FullCalendar\r\n                windowResizeDelay={0}\r\n                height=\"auto\"\r\n                plugins={[dayGridPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                initialDate={Date.now()}\r\n                events={events}\r\n                ref={calRef}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\GoogleSignIn.tsx",[],"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\EventModal.tsx",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport http from \"../modules/axios\";\r\nimport { DateTime } from \"luxon\";\r\nimport parseEvents from \"../modules/regex\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport EventModalIndividual from \"./EventModalIndividual\";\r\nimport { CalendarModel, CalendarEventModel } from \"models/out/main\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  cals: CalendarModel[];\r\n  handleClose: () => void;\r\n  handleSubmit: (event: CalendarEventModel) => void;\r\n}\r\n\r\nconst EventModal = ({ show, cals, handleClose, handleSubmit }: Props) => {\r\n  const [regexValue, setValue] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [cal, setCal] = useState<CalendarModel>(cals[0]);\r\n  const [events, setEvents] = useState<CalendarEventModel[]>([]);\r\n\r\n  // Update events on value change\r\n  useEffect(() => {\r\n    if (regexValue) {\r\n      const x = parseEvents(regexValue, cal.timeZone);\r\n      setEvents(x);\r\n    }\r\n    return;\r\n  }, [regexValue, cal]);\r\n\r\n  const handleSubmitInternal = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n\r\n    events.forEach((item) => addEvent(item));\r\n    handleClose();\r\n  };\r\n\r\n  const addEvent = (event: CalendarEventModel) => {\r\n    event.title = name;\r\n    http\r\n      .post(`/calendar/events/${cal.id}`, event.toGoogle())\r\n      .then((res) => {\r\n        handleSubmit(res.data as CalendarEventModel);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} enforceFocus={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Event</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Row>\r\n            <Col md={5}>\r\n              <Form.Group controlId=\"event-name\">\r\n                <Form.Label>Event Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter event name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Form.Group as={Col} controlId=\"event-cal\">\r\n              <Form.Label>Calendar</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(e) => {\r\n                  setCal(cals.find((item) => item.id === e.target!.value)!);\r\n                }}\r\n              >\r\n                {cals.map((item) => {\r\n                  return (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.summary}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"event-regex\">\r\n              <Form.Label>Events</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Monday 9-5, Wed 12pm-3:30pm\"\r\n                rows={3}\r\n                value={regexValue}\r\n                onChange={(e) => setValue(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {events.length > 0 ? (\r\n            events.map((item) => {\r\n              return (\r\n                <EventModalIndividual\r\n                  key={item.start + item.end}\r\n                  event={item}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {/* <Form.Row>\r\n            <Form.Group as={Col} controlId=\"event-start\">\r\n              <Form.Label>Event Start</Form.Label>\r\n              <div className=\"m-0 p-0\">\r\n                <DatePicker\r\n                  selected={startDate}\r\n                  onChange={(date) => setStartDate(date)}\r\n                  customInput={<Form.Control />}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"event-end\">\r\n              <Form.Label>Event End</Form.Label>\r\n              <div className=\"m-0 p-0\">\r\n                <DatePicker\r\n                  selected={endDate}\r\n                  onChange={(date) => setEndDate(date)}\r\n                  customInput={<Form.Control />}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"event-cal\">\r\n              <Form.Label>Calendar</Form.Label>\r\n              <Form.Control as=\"select\">\r\n                {cals.map((item) => {\r\n                  return (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.summary}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form.Row> */}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSubmitInternal}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\modules\\regex.ts",[],"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\EventModalIndividual.tsx",["59","60","61"],"import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { DateTime } from \"luxon\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { CalendarModel, CalendarEventModel } from \"models/out/main\";\r\n// import DatePicker from \"react-datepicker\";\r\n\r\ninterface Props {\r\n  event: CalendarEventModel;\r\n}\r\n\r\nconst EventModalIndividual = ({ event }: Props) => {\r\n  const start = DateTime.fromISO(event.start);\r\n  const end = DateTime.fromISO(event.end);\r\n\r\n  const startStr = start.toFormat(\"MMM dd h:mm a\");\r\n  const endStr = !(\r\n    end.hasSame(start, \"year\") &&\r\n    end.hasSame(start, \"month\") &&\r\n    end.hasSame(start, \"day\")\r\n  )\r\n    ? end.toFormat(\"MMM dd h:mm a\")\r\n    : end.toFormat(\"h:mm a\");\r\n\r\n  // const CustomTimeInput = ({ date, value, onChange }) => (\r\n  //   <input value={value} onChange={(e) => onChange(e.target.value)} />\r\n  // );\r\n  // const popover = (\r\n  //   <Popover>\r\n  //     <DatePicker\r\n  //       selected={startTime.toJSDate()}\r\n  //       onChange={(date) => console.log(date)}\r\n  //       style={{ width: \"100%\", height: \"100%\" }}\r\n  //       inline\r\n  //       showTimeInput\r\n  //       customTimeInput={<CustomTimeInput />}\r\n  //     />\r\n  //   </Popover>\r\n  // );\r\n\r\n  return (\r\n    <Form.Row>\r\n      <Col>\r\n        {/* <OverlayTrigger trigger=\"click\" placement=\"auto-end\" overlay={popover}> */}\r\n        <span>{startStr}</span>\r\n        {/* </OverlayTrigger> */}\r\n        <span> - </span>\r\n        <span>{endStr}</span>\r\n      </Col>\r\n    </Form.Row>\r\n  );\r\n};\r\n\r\nexport default EventModalIndividual;\r\n",["62","63"],"C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Navbar.tsx",["64","65","66","67"],"import { oauth2_v2 } from \"googleapis/build/src/apis/oauth2/v2\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DropdownButton,\r\n  Row,\r\n  Image,\r\n  Navbar as NavbarBS,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport http from \"../modules/axios\";\r\n\r\ninterface Props {\r\n  user: oauth2_v2.Schema$Userinfo;\r\n  showModal: () => void;\r\n}\r\n\r\nconst Navbar = ({ user, showModal }: Props) => {\r\n  return (\r\n    <NavbarBS className=\"w-100 mb-2\">\r\n      {/* <Nav className=\"mr-auto w-100\">\r\n        <Nav className=\"justify-content-center w-100\">\r\n          <Nav className=\"justify-content-around w-100\">\r\n            <Nav.Item>\r\n              <Button variant=\"primary\" onClick={showModal}>\r\n                Add Events\r\n              </Button>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Nav>\r\n      </Nav> */}\r\n      <Nav variant=\"pills\" className=\"w-100 justify-content-end\">\r\n        <Nav.Item>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            onClick={(e) => {\r\n              http.get(\"/logout\").then((res) => {\r\n                window.location.reload();\r\n              });\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </NavbarBS>\r\n  );\r\n\r\n  // return (\r\n  //   <NavbarBS>\r\n  //     <Col>\r\n  //       <Button variant=\"primary\" onClick={showModal}>\r\n  //         Show Modal\r\n  //       </Button>\r\n  //     </Col>\r\n  //     {/* <Col>\r\n  //             <DropdownButton\r\n  //               variant=\"primary\"\r\n  //               title={cal!.summary}\r\n  //               onSelect={(e) => {\r\n  //                 dispatch({\r\n  //                   type: ActionType.setCalByID,\r\n  //                   data: e,\r\n  //                 });\r\n  //               }}\r\n  //             >\r\n  //               {cals!.map((item) => {\r\n  //                 return (\r\n  //                   <DropdownItem\r\n  //                     eventKey={item.id}\r\n  //                     key={item.id}\r\n  //                     active={item.id === cal!.id}\r\n  //                   >\r\n  //                     {item.summary}\r\n  //                   </DropdownItem>\r\n  //                 );\r\n  //               })}\r\n  //             </DropdownButton>\r\n  //           </Col> */}\r\n  //     <Col>\r\n  //       <Button\r\n  //         variant=\"primary\"\r\n  //         onClick={(e) => {\r\n  //           http.get(\"/logout\").then((res) => {\r\n  //             window.location.reload();\r\n  //           });\r\n  //         }}\r\n  //       >\r\n  //         Log out\r\n  //       </Button>\r\n  //     </Col>\r\n  //     <Col>\r\n  //       <Image\r\n  //         src={user.picture as string}\r\n  //         roundedCircle\r\n  //         fluid\r\n  //         style={{ height: \"50px\", width: \"50px\" }}\r\n  //       />\r\n  //     </Col>\r\n  // </NavbarBS>\r\n  // );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Anthony\\Documents\\Code\\Node.js\\smarter-calendar\\frontend\\src\\components\\Sidebar.tsx",["68"],"import { CalendarModel } from \"models/out/main\";\r\nimport React from \"react\";\r\nimport { Button, FormCheck } from \"react-bootstrap\";\r\n\r\nconst Sidebar = ({\r\n  cals,\r\n  showModal,\r\n}: {\r\n  cals: CalendarModel[];\r\n  showModal: () => void;\r\n}) => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Button\r\n        className=\"d-block mx-auto mb-5\"\r\n        variant=\"primary\"\r\n        onClick={showModal}\r\n      >\r\n        Add Events\r\n      </Button>\r\n      <span style={{ fontWeight: \"bold\" }}>Calendars</span>\r\n      {cals.map((item) => {\r\n        return (\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"custom-control custom-checkbox my-1\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id={item.id}\r\n                style={{\r\n                  backgroundColor: item.color?.background!,\r\n                  color: item.color?.background!,\r\n                }}\r\n              />\r\n              <label\r\n                className=\"custom-control-label\"\r\n                htmlFor={item.id}\r\n                style={{\r\n                  display: \"inline\",\r\n                  fontWeight: 500,\r\n                  whiteSpace: \"normal\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                }}\r\n              >\r\n                {item.summary}\r\n              </label>\r\n            </div>\r\n\r\n            {/* <div\r\n              style={{\r\n                backgroundColor: item.color?.background!,\r\n                height: \"1em\",\r\n                width: \"1em\",\r\n                marginRight: \"3px\",\r\n                borderRadius: \"1em\",\r\n              }}\r\n            ></div>\r\n            <span\r\n              style={{\r\n                backgroundColor: item.color?.background as string,\r\n                color: item.color?.foreground as string,\r\n                fontWeight: 400,\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              }}\r\n            >\r\n              {item.summary}\r\n            </span> */}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":2,"column":31,"nodeType":"75","messageId":"76","endLine":2,"endColumn":45},{"ruleId":"73","severity":1,"message":"78","line":2,"column":47,"nodeType":"75","messageId":"76","endLine":2,"endColumn":53},{"ruleId":"73","severity":1,"message":"79","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":20},{"ruleId":"73","severity":1,"message":"80","line":94,"column":11,"nodeType":"75","messageId":"76","endLine":94,"endColumn":14},{"ruleId":"73","severity":1,"message":"81","line":94,"column":31,"nodeType":"75","messageId":"76","endLine":94,"endColumn":34},{"ruleId":"73","severity":1,"message":"82","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":18},{"ruleId":"73","severity":1,"message":"83","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":15},{"ruleId":"73","severity":1,"message":"84","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":22},{"ruleId":"73","severity":1,"message":"85","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":23},{"ruleId":"69","replacedBy":"86"},{"ruleId":"71","replacedBy":"87"},{"ruleId":"73","severity":1,"message":"88","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":6},{"ruleId":"73","severity":1,"message":"77","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":17},{"ruleId":"73","severity":1,"message":"89","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":6},{"ruleId":"73","severity":1,"message":"90","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":8},{"ruleId":"73","severity":1,"message":"91","line":3,"column":18,"nodeType":"75","messageId":"76","endLine":3,"endColumn":27},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'Button' is defined but never used.","'DropdownItem' is defined but never used.","'cal' is assigned a value but never used.","'api' is assigned a value but never used.","'DateTime' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'CalendarModel' is defined but never used.",["92"],["93"],"'Col' is defined but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'FormCheck' is defined but never used.","no-global-assign","no-unsafe-negation"]